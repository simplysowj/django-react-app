version: '3.8'

services:
  backend:
    build: 
      context: /Users/sowjanyabojja/Desktop/django-react-app/backend/apiview/orm1
    container_name: django-backend
    volumes:
      - /Users/sowjanyabojja/Desktop/django-react-app/backend/apiview/orm1:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynetwork
    command: ["sh", "-c", "sleep 10 && python manage.py runserver 0.0.0.0:8000"]


  frontend:
    build: 
      context: /Users/sowjanyabojja/Desktop/django-react-app/frontend/react1/vite-project
    container_name: react-frontend
    volumes:
      - /Users/sowjanyabojja/Desktop/django-react-app/frontend/react1/vite-project:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - REACT_APP_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - mynetwork

  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Sairam
      POSTGRES_DB: business_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d business_db"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
